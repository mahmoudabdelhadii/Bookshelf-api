name: Code Quality
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - prod
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  fmt:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js v22.9.0
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: v22.9.0
      - name: Install node_modules
        run: npm ci
      - name: Run fmt
        run: npm run --workspaces --if-present fmt:check
  lint:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js v22.9.0
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: ".nvmrc"
      - name: Install node_modules
        run: npm ci
      - name: Run lint
        run: just tslint
  check:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js v22.9.0
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: v22.9.0
      - name: Install node_modules
        run: npm ci
      - name: Run check
        run: just tscheck
  test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/kitab
      REDIS_URL: redis://localhost:6379
    if: github.event.pull_request.draft == false
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kitab
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js v22.9.0
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: v22.9.0
      - name: Install node_modules
        run: npm ci
      - name: Run tests
        run: just tstest
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js v22.9.0
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: v22.9.0
      - name: Install node_modules
        run: npm ci
      - name: Run build
        run: just tsbuild
